(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var o=n(3),r=n(7),c=(n(0),n(147)),a={id:"exceptions",title:"Exceptions",slug:"exceptions.html"},i={unversionedId:"assertions/exceptions",id:"assertions/exceptions",isDocsHomePage:!1,title:"Exceptions",description:"To assert that a given block of code throws an exception, one can use the shouldThrow function. Eg,",source:"@site/docs/assertions/exceptions.md",slug:"/assertions/exceptions.html",permalink:"/docs/assertions/exceptions.html",editUrl:"https://github.com/kotest/kotest/docs/assertions/exceptions.md",version:"current",sidebar:"assertions",previous:{title:"Matchers",permalink:"/docs/assertions/matchers.html"},next:{title:"Clues",permalink:"/docs/assertions/clues.html"}},s=[],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"To assert that a given block of code throws an exception, one can use the ",Object(c.b)("inlineCode",{parentName:"p"},"shouldThrow")," function. Eg,"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-kotlin"}),"shouldThrow<IllegalAccessException> {\n  // code in here that you expect to throw an IllegalAccessException\n}\n")),Object(c.b)("p",null,"You can also check the caught exception:"),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-kotlin"}),'val exception = shouldThrow<IllegalAccessException> {\n  // code in here that you expect to throw an IllegalAccessException\n}\nexception.message should startWith("Something went wrong")\n')),Object(c.b)("p",null,"If you want to test that a specific type of exception is thrown, then use ",Object(c.b)("inlineCode",{parentName:"p"},"shouldThrowExactly<E>"),". For example, the\nfollowing block would catch a ",Object(c.b)("inlineCode",{parentName:"p"},"FileNotFoundException")," but not a ",Object(c.b)("inlineCode",{parentName:"p"},"IOException")," even though ",Object(c.b)("inlineCode",{parentName:"p"},"FileNotFoundException"),"\nextends from ",Object(c.b)("inlineCode",{parentName:"p"},"IOException"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-kotlin"}),"val exception = shouldThrowExactly<FileNotFoundException> {\n  // test here\n}\n")),Object(c.b)("p",null,"If you simply want to test that ",Object(c.b)("em",{parentName:"p"},"any")," exception is thrown, regardles of type, then use ",Object(c.b)("inlineCode",{parentName:"p"},"shouldThrowAny"),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(o.a)({parentName:"pre"},{className:"language-kotlin"}),"val exception = shouldThrowAny {\n  // test here can throw any type of Throwable!\n}\n")))}p.isMDXComponent=!0},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var o=n(0),r=n.n(o);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(a,".").concat(d)]||u[d]||b[d]||c;return n?r.a.createElement(h,i(i({ref:t},l),{},{components:n})):r.a.createElement(h,i({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<c;l++)a[l]=n[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);